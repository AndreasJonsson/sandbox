Directory tree runner.

This will take an XML file and convert it to a directory tree sutable for easy editing.
It will also take a directory tree and convert to an XML file.

To Build type:
mvn

To use:
cd ./target/
java -jar ./dir2xml.jar ../pom.xml
(notice a new directory /target/pom/)
java -jar ./dir2xml.jar ./pom/
(now there is a new file: /target/pom.xml)
You have converted an XML file to a dir tree and back.

Flags:
-o Directory to output to
-c Try to conform to XWiki export format for escaping and do not tab in sub-elements
-a When generating XML, escape any character which is not ascii (characters 0-127)

Example:
java -jar ~/java/xwikiSrc/contrib/sandbox/xwiki-dirtree/target/dir2xml.jar ./src/main/resources/Invitation/*.xml -a -c -o ./src/main/dirtree/Invitation/
Will create a directory tree for each xml file in ./src/main/dirtree/Invitaion

java -jar ~/java/xwikiSrc/contrib/sandbox/xwiki-dirtree/target/dir2xml.jar ./src/main/dirtree/Invitation/* -a -c -o ./src/main/resources/Invitation/
Will take the content of the directory tree and rebuild the XML files ensuring that there is no non ascii characters and trying to match the XWiki xml format.

* There are slight format differences such as:
XWiki will generate this:
</content></xwikidoc>

Dirtree will convert it to this:
</content>
</xwikidoc>

Also dirtree will convert this:
<propertiesToShow/>
To this:
<propertiesToShow></propertiesToShow>

Any changes which materially alter the XML file are a bug and can be reported to:
calebdelisle @t lavabit d0t com

How it works:
Converts tag names into filenames and inner content into file content.
Elements with child elements will be made into directorys.
Tag attributes will be output into a file inside the tag directory called &!attributes

<root attribute="value">
  <aTag>
    <anotherTag>Content</anotherTag>
  </aTag>
  <aTag>moreContent</aTag>
</root>

will produce:

1.root (directory)
 |
 +-&!attributes (file containing 'attribute="value"')
 |
 +-1.aTag (directory)
 |  |
 |  +-1.anotherTag (file containing 'Content')
 |  
 +-2.aTag (file containing 'moreContent')

What doesn't work:

<aTag>
  content
  <anotherTag>moreContent</anotherTag>
</aTag>
It will try to make aTag into a directory and seeing it has content will throw an error.

<aTag attribute="value">content</aTag>
Same problem.

- XML comments are not treated correctly.

Have fun!
